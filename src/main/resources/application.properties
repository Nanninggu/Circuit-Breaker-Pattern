# Spring Boot
spring.application.name=Circuit-Breaker-Pattern

# Mybatis Location
mybatis.mapper-locations=classpath:mapper/*.xml

# Server port
server.port=8080

# Postgres DB
spring.datasource.url=jdbc:postgresql://localhost:5432/PracticeDB
spring.datasource.username=postgres
spring.datasource.password=test1234
spring.datasource.driver-class-name=org.postgresql.Driver

# Logging
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

# resilience4j
# 서킷 브레이커의 기본 설정을 정의합니다. Open 되면 모든 호출은 차단 된다.

# 아래의 옵션을 한글로 풀어보면 이와 같을 것이다. → 슬라이딩 윈도우가 동작전 5번의 호출이 먼저 선행된 후 슬라이딩 윈도우 값을 통해 최근 10개의 호출값을 기반으로
# 실패율이 50퍼센트가 넘으면 10초통안 차단하는 서킷브레이커가 생성된다. (총 15회를 선행 실행 중 10회를 기반으로 50%가 넘으면 10초동안 차단된다는 의미이다.)

# 슬라이딩 윈도우의 크기. 해당 값은 서킷브레이커가 CLOSED 경우 값을 기록할 때 사용한다.
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
# 실패율 임계값. 해당 값은 서킷브레이커가 OPEN 상태로 전환되는 실패율을 나타냅니다.
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
# 서킷브레이커가 상태를 OPEN에서 HALF_OPEN으로 변경시키기 전까지 대기하는 시간입니다.
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10s
# 슬라이딩 윈도우에서 서킷브레이커가 Closed 경우 값을 집계할 때의 방식. 해당 값은 COUNT_BASED 또는 TIME_BASED가 되어야 합니다.
resilience4j.circuitbreaker.configs.default.sliding-window-type=COUNT_BASED
# 서킷브레이커가 값을 집계하기 전, 최소 호출해야 하는 횟수. (슬리아딩 윈도우가 동작 전 최소 5개의 호출이 미리 선행된다.)
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5
# Half_Open 상태에서 Open/Closed 상태 전환을 판단할 요청의 개수입니다. 3개 요청이 전부 성공 → Closed 상태로 전환, 3개 요청 중 1개라도 실패 → Open 상태로 전환
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=3
